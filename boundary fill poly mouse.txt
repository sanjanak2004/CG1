#include <iostream>
#include <GL/glut.h>

const int WIDTH = 640;
const int HEIGHT = 480;

float fillR = 1.0f, fillG = 0.0f, fillB = 0.0f; // Default fill color (red)

void setPixel(int x, int y, float r, float g, float b) {
    glColor3f(r, g, b);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

void boundaryFill(int x, int y, float fillColorR, float fillColorG, float fillColorB, float borderColorR, float borderColorG, float borderColorB) {
    float currentPixel[3];
    glReadPixels(x, y, 1, 1, GL_RGB, GL_FLOAT, currentPixel);

    if (currentPixel[0] != borderColorR || currentPixel[1] != borderColorG || currentPixel[2] != borderColorB) {
        setPixel(x, y, fillColorR, fillColorG, fillColorB);

        boundaryFill(x + 1, y, fillColorR, fillColorG, fillColorB, borderColorR, borderColorG, borderColorB);
        boundaryFill(x - 1, y, fillColorR, fillColorG, fillColorB, borderColorR, borderColorG, borderColorB);
        boundaryFill(x, y + 1, fillColorR, fillColorG, fillColorB, borderColorR, borderColorG, borderColorB);
        boundaryFill(x, y - 1, fillColorR, fillColorG, fillColorB, borderColorR, borderColorG, borderColorB);
    }
}

void mouseCallback(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        y = HEIGHT - y;
        boundaryFill(x, y, fillR, fillG, fillB, 1.0f, 1.0f, 1.0f); // Using white as the border color
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    glColor3f(0.0f, 0.0f, 0.0f); // Black color for polygon border
    glBegin(GL_LINE_LOOP);
    glVertex2i(200, 200);
    glVertex2i(400, 400);
    glVertex2i(200, 400);
    glEnd();

    glFlush();
}

void init() {
    glClearColor(1.0f, 1.0f, 1.0f, 1.0f); // White background color
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, WIDTH, 0, HEIGHT);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(WIDTH, HEIGHT);
    glutCreateWindow("Boundary Fill Polygon Filling");

    glutDisplayFunc(display);
    glutMouseFunc(mouseCallback);

    init();

    glutMainLoop();

    return 0;
}
