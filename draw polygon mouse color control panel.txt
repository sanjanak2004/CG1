#include <iostream>
#include <vector>
#include <GL/glut.h>

struct Point {
    int x, y;
};

std::vector<Point> vertices;  // Store vertices of the polygon
bool colorSelected = false;
float selectedColor[3] = {1.0f, 0.0f, 0.0f};  // Default color: red (RGB)

void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0, 640, 0, 480);
}

void drawColorPanel() {
    // Draw color squares
    glPushMatrix();
    glTranslatef(10, 10, 0);
    glColor3f(1.0f, 0.0f, 0.0f);  // Red
    glBegin(GL_QUADS);
    glVertex2i(0, 0);
    glVertex2i(20, 0);
    glVertex2i(20, 20);
    glVertex2i(0, 20);
    glEnd();

    glColor3f(0.0f, 1.0f, 0.0f);  // Green
    glBegin(GL_QUADS);
    glVertex2i(30, 0);
    glVertex2i(50, 0);
    glVertex2i(50, 20);
    glVertex2i(30, 20);
    glEnd();

    glColor3f(0.0f, 0.0f, 1.0f);  // Blue
    glBegin(GL_QUADS);
    glVertex2i(60, 0);
    glVertex2i(80, 0);
    glVertex2i(80, 20);
    glVertex2i(60, 20);
    glEnd();
    glPopMatrix();
}

void drawPolygon() {
    glColor3fv(selectedColor);
    glBegin(GL_LINE_LOOP);
    for (const auto& vertex : vertices) {
        glVertex2i(vertex.x, vertex.y);
    }
    glEnd();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    drawColorPanel();  // Draw color panel
    drawPolygon();     // Draw the polygon

    glFlush();
}

void mouse(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        // Check if color is selected from color panel
        if (y >= 10 && y <= 30) {
            if (x >= 10 && x <= 30) {
                // Red color selected
                selectedColor[0] = 1.0f;
                selectedColor[1] = 0.0f;
                selectedColor[2] = 0.0f;
            } else if (x >= 30 && x <= 50) {
                // Green color selected
                selectedColor[0] = 0.0f;
                selectedColor[1] = 1.0f;
                selectedColor[2] = 0.0f;
            } else if (x >= 60 && x <= 80) {
                // Blue color selected
                selectedColor[0] = 0.0f;
                selectedColor[1] = 0.0f;
                selectedColor[2] = 1.0f;
            }
            colorSelected = true;
        } else {
            // Add vertex to the polygon
            if (colorSelected) {
                vertices.push_back({x, 480 - y});
                glutPostRedisplay();  // Trigger display function
            }
        }
    }
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Draw Polygon with Color Panel");
    init();

    glutDisplayFunc(display);
    glutMouseFunc(mouse);

    glutMainLoop();

    return 0;
}


//Left-Click on the Window
//Click anywhere inside the window to define vertices of the polygon.
//Each click will add a vertex to the polygon at the clicked position.
//Polygon Closure
//To complete the polygon, you can click multiple times to add vertices.
//The polygon will automatically close once you finish defining the last vertex (e.g., by clicking near the starting vertex).

//Color Selection Panel
//Three color squares are displayed at the top-left corner of the window: Red, Green, and Blue.
//Each square represents a different color.
//Choosing Colors
//Click on the desired color square to change the drawing color.
//Clicking the red square will set the drawing color to red.
//Clicking the green square will set the drawing color to green.
//Clicking the blue square will set the drawing color to blue.
