#include <iostream>
#include <GL/gl.h>
#include <GL/glut.h>
using namespace std;

float R = 0, G = 0, B = 0;
int Algo;

void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0, 640, 0, 480);
}

void floodFill(int x, int y, float *newCol, float *oldCol) {
    float pixel[3];
    glReadPixels(x, y, 1, 1, GL_RGB, GL_FLOAT, pixel);
    if (oldCol[0] == pixel[0] && oldCol[1] == pixel[1] && oldCol[2] == pixel[2]) {
        glColor3f(newCol[0], newCol[1], newCol[2]);
        glBegin(GL_POINTS);
        glVertex2i(x, y);
        glEnd();
        glFlush();
        floodFill(x, y + 1, newCol, oldCol);
        floodFill(x + 1, y, newCol, oldCol);
        floodFill(x, y - 1, newCol, oldCol);
        floodFill(x - 1, y, newCol, oldCol);
    }
}

void mouse(int btn, int state, int x, int y) {
    y = glutGet(GLUT_WINDOW_HEIGHT) - y;  // Adjust y-coordinate based on window height
    if (btn == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        float oldCol[] = {1, 1, 1};
        float newCol[] = {R, G, B};
        floodFill(x, y, newCol, oldCol);
    }
}

void drawPolygon() {
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
    glColor3f(1, 0, 0);
    glVertex2i(150, 100);
    glVertex2i(300, 300);
    glVertex2i(450, 100);
    glEnd();
    glFlush();
}

void colorMenu(int value) {
    switch(value) {
        case 1:
            R = 0, G = 1, B = 0;  // Green
            cout << "Selected color: Green (RGB: 0, 1, 0)" << endl;
            break;
        case 2:
            R = 1, G = 1, B = 0;  // Yellow
            cout << "Selected color: Yellow (RGB: 1, 1, 0)" << endl;
            break;
        case 3:
            R = 0, G = 0, B = 1;  // Blue
            cout << "Selected color: Blue (RGB: 0, 0, 1)" << endl;
            break;
    }
    glutPostRedisplay();  // Redraw to apply the selected color
}

int main(int argc, char** argv) {
    cout << "OpenGL Program: Polygon Filling (Flood Fill)" << endl;
    cout << "\nSelect the Algorithm:" << endl;
    cout << "1. Boundary Fill Algorithm" << endl;
    cout << "2. Flood Fill Algorithm" << endl;
    cout << "Enter your choice (1 or 2): ";
    cin >> Algo;

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(200, 200);
    glutCreateWindow("Boundary Fill and Flood Fill");
    init();

    glutCreateMenu(colorMenu);
    glutAddMenuEntry("Color 1 Green", 1);
    glutAddMenuEntry("Color 2 Yellow", 2);
    glutAddMenuEntry("Color 3 Blue", 3);
    glutAttachMenu(GLUT_RIGHT_BUTTON);

    if (Algo == 2) {
        cout << "Using Flood Fill Algorithm." << endl;
        glutDisplayFunc(drawPolygon);  // Use drawPolygon for flood fill algorithm
    }

    glutMouseFunc(mouse);
    glutMainLoop();
    
    return 0;
}
